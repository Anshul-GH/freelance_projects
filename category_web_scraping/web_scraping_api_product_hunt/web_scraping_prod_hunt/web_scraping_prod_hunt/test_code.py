import re
import os

# setup the default file lookup location to cwd
__location__ = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))


src_data = ['<div class="api--content">\n          <h2>Welcome to the Product Hunt API 2.0</h2>\n<p>\n  The goal of this API is to provide access to Product Hunt data via a simple\n  <a href="https://graphql.org/" target="_blank">GraphQL</a> interface.\n</p>\n<p>\n  If you have any ideas for improvements or just wanna chat about queries or mutations<br>\n  <a href="https://github.com/producthunt/producthunt-api/issues">let us know on GitHub.</a> Remember to add <strong>v2</strong> label to the issue.\n</p>\n\n<h3>Not familiar with GraphQL?</h3>\n<p>\n  Here are some resources that can help you get started with GraphQL.\n</p>\n<ul>\n  <li><a href="https://graphql.org/" target="_blank">GraphQL</a> home page.</li>\n  <li><a href="https://www.howtographql.com/" target="_blank">How To GraphQL</a> - a free and open-source tutorial to learn all around GraphQL to go from zero to production.</li>\n</ul>\n\n<h3>Privileges</h3>\n<p>There are 3 types of scopes that an application can request on behalf of the user:</p>\n<ul>\n  <li><strong>Public :</strong> Access public information on Product Hunt.</li>\n  <li><strong>Private :</strong> Access Product Hunt on behalf of the authenticated user. For e.g application will be able to read goals of the user.</li>\n  <li><strong>Write :</strong> Take actions on Product Hunt on behalf of the user. For e.g application will be able to mark user\'s goals as complete/incomplete.</li>\n</ul>\n<p>For example, if you are building an application in which you need to know if a user has followed a topic, or commented on a post, you would need to request <em>`public private`</em> scope.</p>\n<ul>\n  <li>By default <strong>all apps are read-only</strong> i.e they have <em>`public`</em> scope. </li>\n  <li>\n    As part of API 2.0 we have decided to give <strong>partial write access</strong> to third party applications depending on the use-case. If your application needs it\n    feel free to get in touch with us at <a href="mailto:hello@producthunt.com">hello@producthunt.com</a>. Remember you would also need to request <em>`public private write`</em> scope\n    for write functions to work.\n  </li>\n  <li>\n    The Product Hunt API must not be used for commercial purposes. If you would like to use it for\n    your business, please contact us at <a href="mailto:hello@producthunt.com">hello@producthunt.com</a>.\n  </li>\n</ul>\n\n<h3>Accessing Endpoints</h3>\n<ul>\n  <li>The API is reachable at <strong>https://api.producthunt.com/v2/api/graphql</strong></li>\n  <li>Currently the API is only accessible with a provided <em>access_token</em>.</li>\n  <li>We reserve the right to rate-limit any application if we feel you are not following <strong>fair-use</strong>.</li>\n  <li>If you require faster access without rate limit please contact us.</li>\n</ul>\n\n<h3>Get started: Getting an OAuth2 token</h3>\n<p>Get a token on behalf of a user:</p>\n<ul>\n  <li>Follow the steps in <em>OAuth User Authentication</em> oauth#authorize to receive an access_grant</li>\n  <li>Use the access_grant in oauth#token</li>\n  <li>Add the <em>Authorization</em> http header with the token to all requests. E.g <em>Authorization: Bearer {token}</em></li>\n  <li>Test this and troubleshoot according to the examples in oauth#test</li>\n</ul>\n\n<p>Get a token without user context. (eg before a user logs in)</p>\n<ul>\n  <li>Follow the steps explained in <em>OAuth Client Only Authentication</em> oauth#token</li>\n  <li>Please remember that this tokens limit you to public endpoints that don\'t require user context.</li>\n</ul>\n\n<p>But… i just wanted to run a simple script?</p>\n<ul>\n  <li>The oauth2 flow is a bit of a overkill if you just want to run a few scripts</li>\n  <li>\n    We provide a developer_token (does not expire, linked to your account) in the\n    <a href="https://www.producthunt.com/v2/oauth/applications">app dashboard</a>\n  </li>\n</ul>\n\n<h3>May I use the API for my business?</h3>\n<p>\n  By default the Product Hunt API must not be used for commercial purposes.\n  If you would like to use it for your business, please contact us at\n  <a href="mailto:hello@producthunt.com">hello@producthunt.com</a>.\n</p>\n\n<h3>Done building? Get featured!</h3>\n<p>\n  We’re excited to see what all you creative folks build and happy to feature your product on the site.\n  Contact us at <a href="mailto:hello@producthunt.com">hello@producthunt.com</a> with its name,\n  a couple sentence description, and link to the project.\n</p>\n\n<h3>Do I have to attribute Product Hunt?</h3>\n<p>\n  We kindly ask that you include attribution in your project, linking back to\n  <a href="http://www.producthunt.com">Product Hunt</a>.\n  We’d also appreciate those that include a Product Hunt logo (it’s helpful for us!).\n</p>\n<p>\n  You can <a href="https://s3.amazonaws.com/producthunt/ph_brand_assets.zip">download the goodies here</a>.\n</p>\n\n<h3>Are there any other ways to do Product Hunt Integrations?</h3>\n<p>\n  Yes! There is quite a bunch of third party APIs. Blazin\' fast fulltext search,\n  SDKs with callbacks for real-time like interaction, web-hooks, etc etc.\n  Go here for the <a href="https://github.com/producthunt/producthunt-api/wiki/Product-Hunt-APIs">full list</a>.\n</p>\n<p>\n  Btw there is also a lot of Open Source software out there.\n  <a href="https://github.com/producthunt/producthunt-api/wiki/Code-Examples">Take a look</a>.\n  Maybe there is something you can reuse.\n</p>\n\n<h3>But…?</h3>\n<p>\n  If you have any more questions, feedback, ideas or problems don’t hesitate to contact us!\n  Also, let us know what you’re working on! Drop us a line at\n  <a href="mailto:hello@producthunt.com">hello@producthunt.com</a>.\n</p>\n<p>\n  Happy Hacking!\n</p>\n\n        </div>']

src_data = src_data[0].split('\n')
# print(len(src_data))
# print(src_data)

# remove trailing spaces
src_data = [val.strip() for val in src_data]

# append spaces around < > angle brackets and replace with # 
src_data = [re.sub(r'[<]', ' <', val) for val in src_data]
src_data = [re.sub(r'[>]', '> ', val) for val in src_data]

# remove everything between < >
src_data = [re.sub(r'[<](?:[^<>]+)[>]', '', val) for val in src_data]

# remove trailing spaces
src_data = [val.strip() for val in src_data]

# remove blank values from list
src_data = [val for val in src_data if val] 

for val in src_data:
    with open(os.path.join(__location__)+'/output.txt', 'a+') as f:
        f.write(val+'\n')
